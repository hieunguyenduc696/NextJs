{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\nextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://hieun:Thienlonghieu123@cluster0.sehw1.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const MeetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://hieun:Thienlonghieu123@cluster0.sehw1.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(MeetupId)\n  });\n  client.close();\n  return {\n    props: {\n      image: meetup.image,\n      title: meetup.title,\n      address: meetup.address,\n      description: meetup.description,\n      id: meetup._id.toString()\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/nextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","ObjectId","MeetupDetails","props","image","title","address","description","getStaticPaths","client","MongoClient","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","getStaticProps","context","MeetupId","findOne","id","toString"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,SAAzB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAT,EAAAA,MAAM,CAACU,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN;AAAnB;AAAV,KAAb,CAAZ;AAFF,GAAP;AAID;AAED,OAAO,eAAeS,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACA,QAAMhB,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAEhB,QAAQ,CAAC2B,QAAD;AAAf,GAA1B,CAArB;AACAnB,EAAAA,MAAM,CAACU,KAAP;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEmB,MAAM,CAACnB,KADT;AAELC,MAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFT;AAGLC,MAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAHX;AAILC,MAAAA,WAAW,EAAEgB,MAAM,CAAChB,WAJf;AAKLuB,MAAAA,EAAE,EAAEP,MAAM,CAACN,GAAP,CAAWc,QAAX;AALC;AADF,GAAP;AASD;AAED,eAAe7B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { ObjectId } from \"mongodb\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hieun:Thienlonghieu123@cluster0.sehw1.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({ params: { meetupId: meetup._id } })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const MeetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hieun:Thienlonghieu123@cluster0.sehw1.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(MeetupId) });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      image: meetup.image,\r\n      title: meetup.title,\r\n      address: meetup.address,\r\n      description: meetup.description,\r\n      id: meetup._id.toString(),\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}